<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9
                  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">
	<!-- 
	
		See http://www.liquibase.org/manual/home#available_database_refactorings 
		for a list of supported elements and attributes 
		
	-->
	
    <changeSet author="dagmar@cell-life.org" id="addNewUserEmailSettings">
    	<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				<![CDATA[
				SELECT count(*) FROM setting_group where name='New User Email';
				]]>
			</sqlCheck>
		</preConditions>
		<comment>
			Adding New User Email settings
		</comment>
		<sql> 
       		insert into setting (name, description, value, setting_group_id) 
       		values ('enableNewUserEmail', 'Enable the sending of an email to new users when their login is created', 'false', (select setting_group_id from setting_group where name='User Settings'));
 	    </sql>
 	    <sql> 
       		insert into setting (name, description, value, setting_group_id) 
       		values ('serverUrl', 'The OpenXData server URL (used in the New User Email)', 'http://demo.openxdata.org', (select setting_group_id from setting_group where name='General'));
 	    </sql>
    </changeSet>    
    
    <changeSet author="Mark" id="changing_administrator_details">
		<comment>
			changing the initial details of the default administrator user.
		</comment>
        <update tableName="users">
    		<column name="email" value="contact@openxdata.org"/>
    		<column name="secret_answer" value="the openxdata consortium"/>
    		<where>email='cattabanks@gmail.com'</where>
		</update>
	</changeSet>

    <changeSet author="Jonny" id="remove_rdbs_exporter_as_a_job">
        <comment>
			Remove the rdbs exporter as a job, since it is integrated in server.
        </comment>

        <delete tableName="task_param">
            <where>task_id in (select task_id from task where task_class='org.openxdata.server.export.rdbms.task.RdmsDataExportTask')</where>
        </delete>
        <delete tableName="task">
            <where>task_class='org.openxdata.server.export.rdbms.task.RdmsDataExportTask'</where>
        </delete>
    </changeSet>

    <changeSet author="Morten" id="change_storage_engine_to_innodb">
        <comment>
            Changes the storage engine of all the tables from myisam to innodb.
        </comment>
        <sql>alter table form_data engine = innodb</sql>
        <sql>alter table form_data_version engine = innodb</sql>
        <sql>alter table form_definition engine = innodb</sql>
        <sql>alter table form_definition_text engine = innodb</sql>
        <sql>alter table form_definition_version engine = innodb</sql>
        <sql>alter table form_definition_version_text engine = innodb</sql>
        <sql>alter table form_error engine = innodb</sql>
        <sql>alter table form_sms_archive engine = innodb</sql>
        <sql>alter table form_sms_error engine = innodb</sql>
        <sql>alter table locale engine = innodb</sql>
        <sql>alter table mobile_menu engine = innodb</sql>
        <sql>alter table mobile_menu_text engine = innodb</sql>
        <sql>alter table permission engine = innodb</sql>
        <sql>alter table report engine = innodb</sql>
        <sql>alter table report_group engine = innodb</sql>
        <sql>alter table report_user engine = innodb</sql>
        <sql>alter table role engine = innodb</sql>
        <sql>alter table role_permission engine = innodb</sql>
        <sql>alter table setting engine = innodb</sql>
        <sql>alter table setting_group engine = innodb</sql>
        <sql>alter table study engine = innodb</sql>
        <sql>alter table study_text engine = innodb</sql>
        <sql>alter table study_user engine = innodb</sql>
        <sql>alter table task engine = innodb</sql>
        <sql>alter table task_param engine = innodb</sql>
        <sql>alter table user_form engine = innodb</sql>
        <sql>alter table user_report engine = innodb</sql>
        <sql>alter table user_role engine = innodb</sql>
        <sql>alter table users engine = innodb</sql>
    </changeSet>

    <changeSet author="Morten" id="unique_locale_key">
        <comment>
            Adds unique index to locale.locale_key since it is used as a foreign
            key in other tables
        </comment>
        <addUniqueConstraint tableName="locale"
                columnNames="locale_key"
                constraintName="locale_key_unique"/>
    </changeSet>
    
    <changeSet author="Morten" id="unique_form_definition_version_text">
        <comment>
            Adds unique constraint to fields locale_key and form_defintion_version_id in table form_defintion_version_text
        </comment>
        <addUniqueConstraint tableName="form_definition_version_text"
                columnNames="form_definition_version_id,locale_key"
                constraintName="form_definition_version_text_unique"/>
    </changeSet>

	<changeSet author="cattabanks@gmail.com" id="remove_unused_online_column">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="users" columnName="online" />
		</preConditions>
		<comment>
			Removing unused online column on the User table.
		</comment>
		<dropColumn tableName="users" columnName="online" />
	</changeSet>
    
    <changeSet author="dagmar@cell-life.org" id="add_perm_edit_my_user">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                <![CDATA[
                SELECT count(*) FROM permission where name='Perm_Edit_My_User';
                ]]>
            </sqlCheck>
        </preConditions>
        <comment>
            Adding permission to enable to editing of users
        </comment>  
            <insert tableName="permission">
                <column name="name" value="Perm_Edit_My_User"/>
                <column name="description" value="Ability to edit own user in the system"/>
            </insert>
    </changeSet>
    
    <changeSet author="dagmar@cell-life.org" id="add_role_data_collector_perm_edit_my_user">
     <preConditions onFail="MARK_RAN">
        <sqlCheck expectedResult="0">
        <![CDATA[
        SELECT count(*) FROM role r, role_permission rp, permission p where r.name='Role_Data_Collector'
        and r.role_id = rp.role_id and p.permission_id = rp.permission_id and p.name='Perm_Edit_My_User';
        ]]>
        </sqlCheck>
    </preConditions>
    <comment>
        Adding Perm_Edit_My_User permissions to role Data Collector in role_permission table
    </comment>
    <sql> 
         insert into role_permission (role_id, permission_id) 
         values ((select role_id from role where name='Role_Data_Collector'),
         (select permission_id from permission where name='Perm_Edit_My_User'));
    </sql>
    </changeSet>
    <changeSet author="dagmar@cell-life.org" id="add_role_data_manager_perm_edit_my_user">
     <preConditions onFail="MARK_RAN">
        <sqlCheck expectedResult="0">
        <![CDATA[
        SELECT count(*) FROM role r, role_permission rp, permission p where r.name='Role_Data_Manager'
        and r.role_id = rp.role_id and p.permission_id = rp.permission_id and p.name='Perm_Edit_My_User';
        ]]>
        </sqlCheck>
    </preConditions>
    <comment>
        Adding Perm_Edit_My_User permissions to role Data Manager in role_permission table
    </comment>
    <sql> 
         insert into role_permission (role_id, permission_id) 
         values ((select role_id from role where name='Role_Data_Manager'),
         (select permission_id from permission where name='Perm_Edit_My_User'));
    </sql>
    </changeSet>
    <changeSet author="dagmar@cell-life.org" id="add_role_study_manager_perm_edit_my_user">
     <preConditions onFail="MARK_RAN">
        <sqlCheck expectedResult="0">
        <![CDATA[
        SELECT count(*) FROM role r, role_permission rp, permission p where r.name='Role_Study_Manager'
        and r.role_id = rp.role_id and p.permission_id = rp.permission_id and p.name='Perm_Edit_My_User';
        ]]>
        </sqlCheck>
    </preConditions>
    <comment>
        Adding Perm_Edit_My_User permissions to role Study Manager in role_permission table
    </comment>
    <sql> 
         insert into role_permission (role_id, permission_id) 
         values ((select role_id from role where name='Role_Study_Manager'),
         (select permission_id from permission where name='Perm_Edit_My_User'));
    </sql>
    </changeSet>
    <changeSet author="dagmar@cell-life.org" id="add_role_report_user_perm_edit_my_user">
     <preConditions onFail="MARK_RAN">
        <sqlCheck expectedResult="0">
        <![CDATA[
        SELECT count(*) FROM role r, role_permission rp, permission p where r.name='Role_Report_User'
        and r.role_id = rp.role_id and p.permission_id = rp.permission_id and p.name='Perm_Edit_My_User';
        ]]>
        </sqlCheck>
    </preConditions>
    <comment>
        Adding Perm_Edit_My_User permissions to role Report User in role_permission table
    </comment>
    <sql> 
         insert into role_permission (role_id, permission_id) 
         values ((select role_id from role where name='Role_Report_User'),
         (select permission_id from permission where name='Perm_Edit_My_User'));
    </sql>
    </changeSet>
    <changeSet author="dagmar@cell-life.org" id="add_role_report_manager_perm_edit_my_user">
     <preConditions onFail="MARK_RAN">
        <sqlCheck expectedResult="0">
        <![CDATA[
        SELECT count(*) FROM role r, role_permission rp, permission p where r.name='Role_Report_Manager'
        and r.role_id = rp.role_id and p.permission_id = rp.permission_id and p.name='Perm_Edit_My_User';
        ]]>
        </sqlCheck>
    </preConditions>
    <comment>
        Adding Perm_Edit_My_User permissions to role Report Manager in role_permission table
    </comment>
    <sql> 
         insert into role_permission (role_id, permission_id) 
         values ((select role_id from role where name='Role_Report_Manager'),
         (select permission_id from permission where name='Perm_Edit_My_User'));
    </sql>
    </changeSet>
</databaseChangeLog>
